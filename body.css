@keyframes gradientAnimation {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
    background-size: 400% 400%;
    animation: gradientAnimation 15s ease infinite;
    color: #333;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-align: center;
    overflow: hidden;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Draggable elements */
.draggable {
    cursor: move;
    user-select: none;
    position: absolute;
    z-index: 10;
    transition: box-shadow 0.3s ease;
}

.draggable:hover {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.draggable:active {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

/* Consistent styling for time displays */
.time-display {
    color: #fff;
    background-color: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(4px);
    padding: 8px 15px;
    border-radius: 15px;
    font-family: 'Segoe UI', sans-serif;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* Chart labels container */
#chartLabels {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Allow clicks to pass through to canvas */
    z-index: 5;
}

/* Individual chart label */
.chart-label {
    position: absolute;
    transform: translate(-50%, -50%);
    text-align: center;
    min-width: 80px;
    pointer-events: auto; /* Enable dragging */
}

.chart-label .icon {
    font-size: 24px;
    display: block;
    margin-bottom: 5px;
}

.chart-label .name {
    font-size: 16px;
    white-space: nowrap;
}

#clockContainer {
    position: relative;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}

/* Remove circular clock view styles */

/* Digital clock display */
#digitalClock {
    position: fixed;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    font-family: 'Segoe UI', sans-serif;
    font-size: 3rem;
    font-weight: 300;
    color: #fff;
    background-color: rgba(0, 0, 0, 0.3);
    padding: 5px 20px;
    border-radius: 15px;
    z-index: 100;
    min-width: 300px;
    text-align: center;
}

/* Current task indicator */
#currentTaskIndicator {
    position: fixed;
    top: 30px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 1.8rem;
    color: #fff;
    background: rgba(0, 0, 0, 0.3);
    padding: 10px 20px;
    border-radius: 20px;
    z-index: 100;
}

/* Control panel with buttons */
#controlPanel {
    position: fixed;
    top: 20px;
    right: 20px;
    display: flex;
    gap: 15px;
    z-index: 100;
}

/* Button style */
.neon-button {
    background: rgba(255, 255, 255, 0.25);
    color: #fff;
    border: 2px solid rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    width: 50px;
    height: 50px;
    font-size: 24px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(4px);
    outline: none;
}

.neon-button:hover, .neon-button:focus {
    background: rgba(255, 255, 255, 0.4);
    transform: scale(1.05);
}

/* Modal styling */
#settingsModal {
    display: none;
    position: fixed;
    z-index: 1100;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
}

.modalContent {
    background-color: rgba(255, 255, 255, 0.95);
    color: #333;
    margin: 5% auto;
    padding: 0;
    border-radius: 15px;
    width: 90%;
    max-width: 500px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    overflow: hidden;
    animation: modalAppear 0.3s ease;
}

@keyframes modalAppear {
    from { transform: translateY(-50px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

.modalHeader {
    background: #f8f9fa;
    padding: 15px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #dee2e6;
}

.modalHeader h3 {
    margin: 0;
    color: #333;
    font-weight: 500;
}

.modalBody {
    padding: 20px;
    max-height: 70vh;
    overflow-y: auto;
}

.modalFooter {
    padding: 15px 20px;
    display: flex;
    justify-content: flex-end;
    border-top: 1px solid #dee2e6;
}

.modalFooter .neon-button {
    background: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    width: auto;
    height: auto;
    padding: 8px 20px;
}

.modalFooter .neon-button:hover {
    background: #0069d9;
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
    line-height: 28px;
}

.close:hover {
    color: #333;
}

/* Form styling */
#tasksInputs {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 15px;
    width: 100%;
}

.task-input {
    background: #f8f9fa;
    padding: 10px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.task-input label {
    display: flex;
    align-items: center;
    margin-right: 10px;
    color: #333;
}

.task-input label span {
    font-size: 1.2rem;
    margin-right: 5px;
}

.task-input input {
    background: #fff;
    border: 1px solid #ced4da;
    border-radius: 4px;
    padding: 8px;
    color: #333;
    width: 60px;
    outline: none;
}

.task-input input:focus {
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

/* Apply positioned class to keep elements in their dragged position */
.positioned {
    transform: none !important;
}

/* Fix for elements that started with transform */
#digitalClock.positioned, 
#currentTaskIndicator.positioned {
    left: auto; /* Remove the left: 50% when positioned */
}

/* Fix clock views display */
.clock-view {
    display: none;
    position: relative;
    width: 100%;
    height: 100%;
}

.clock-view.active {
    display: block;
}

/* Progress bar view styles */
#progressBarClockView {
    padding: 0;
    width: 100%;
    height: 100vh; /* Use full viewport height */
}

.progress-container {
    width: 100%;
    height: 100vh; /* Fill the screen */
    background: rgba(255, 255, 255, 0.15);
    border-radius: 15px;
    backdrop-filter: blur(8px);
    box-shadow: 0 8px 32px rgba(31, 38, 135, 0.2);
    position: relative;
    overflow: visible; /* Changed from hidden so markers show */
}

/* Make the status bar fill the container */
#statusBar {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 0;
    overflow: hidden;
}

/* Hour markers overlay */
#hourMarkers {
    position: absolute;
    bottom: 0; /* Place markers at the bottom of the status bar */
    left: 0;
    width: 100%;
    height: 25px;
    z-index: 3;
    overflow: visible;
}

/* Hour marker and label */
.hour-marker {
    position: absolute;
    width: 1px;
    height: 10px;
    background: rgba(255, 255, 255, 0.6); /* light line */
    z-index: 4;
}

.hour-label {
    position: absolute;
    bottom: 0; /* Align labels to the bottom */
    font-size: 12px;
    color: rgba(255, 255, 255, 0.8); /* light-colored font */
    transform: translateX(-50%);
    z-index: 4;
}

/* Current time marker */
#currentTimeMarker {
    position: absolute;
    top: 0;
    width: 2px;
    height: 100%;
    background: #39FF14; /* neon green */
    z-index: 2;
}

/* Current task marker */
#currentTimeMarker {
    position: absolute;
    top: 0;
    width: 2px;
    height: 100%;
    background: #fff;
    z-index: 2;
}

/* Override the current time marker color to red */
#currentTimeMarker {
    background: black !important;
}

/* Fix for control buttons */
.control-button {
    background: rgba(255, 255, 255, 0.25);
    color: #fff;
    border: 2px solid rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    width: 50px;
    height: 50px;
    font-size: 24px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(4px);
    outline: none;
}

.control-button:hover, .control-button:focus {
    background: rgba(255, 255, 255, 0.4);
    transform: scale(1.05);
}

/* New rule to highlight the current task's segment */
.status-segment.current-segment {
    border: 3px solid #fff;
    filter: saturate(3) ; /* Increased saturation for neon effect */
}

/* Force the label in the current segment to be black */
.status-segment.current-segment .segment-label {
    color: #000;
    font-weight: bold;
}
